/* vim: set textwidth=160 : */
/* $Id$ */

digraph logparser {
    graph [
        /* This seems to be width, height - but they interact strangely, so 
         * I'm never sure.
         */
        size = "5.4, 8.4"
        margin = "0"
        center = true
    ]
    node [
        shape = box
    ]
    edge [
        color = blue
        fontcolor = black
        minlen = 2
    ]

    /* EDGES */
    /* Connect from client */
    connect                         -> { rejection } [weight = 5]
    rejection                       -> { rejection } [dir = back, headport = s, tailport = nw]
    rejection                       -> { disconnect } [weight = 5]
    connect                         -> { clone }
    clone                           -> { clone } [dir = back, headport = s, tailport = ne]
    clone                           -> { disconnect }
    clone                           -> { rejection }
    rejection                       -> { clone }

    /* Disconnect without queueid */
    disconnect                      -> { fixup_enter_in_db_disconnect } [weight = 5, label = "If error:" ]

    /* Disconnect with queueid */
    disconnect                      -> { save_by_queueid } [weight = 5, label = " Accepted mails" ]

    /* Misc entry */
    qmgr_chooses_mail               -> { save_by_queueid } [headport = ne]
    pickup                          -> { save_by_queueid } [headport = n]
    /* Graph placement */
    connect                         -> { qmgr_chooses_mail } [style = invis, weight = 0]
    connect                         -> { pickup } [style = invis, weight = 0]

    /* Save results by queueid */
    save_by_queueid                 -> { track } [minlen = 5]
    track                           -> { save_by_queueid }
    save_by_queueid                 -> { save_by_queueid } [dir = back, headport = s, tailport = nw]
    save_by_queueid                 -> { commit } [weight = 10]

    /* NODE LABELS */
    rejection                       [label = "4: Postfix rejects a\nmail delivery attempt"]
    connect                         [label = "1: Connection from\nremote client\nfor SMTP."]
    clone                           [label = "5: Create a new\ndata structure when\na mail is accepted"]

    /* Disconnect without queueid */
    disconnect                      [label = "6: Remote client disconnects,\neither successfully\nor with an error."]
    fixup_enter_in_db_disconnect    [label = "7: Enter in database."]

    /* Disconnect with queueid - already covered */

    /* Misc entry */
    pickup                          [label = "2: Local mail,\nsubmitted via sendmail\nor postdrop."]
    qmgr_chooses_mail               [label = "3: Internally generated mail,\ne.g. bounce notifications."]

    /* Save results by queueid */
    save_by_queueid                 [label = "8: Save data from\ndelivery attempts."]
    track                           [label = "9: Track child of this mail."]

    /* Commit is complicated */
    /* Neither parent nor child. */
    commit                          [label = "10: Mail has been delivered,\nbounced, expired, or deleted."]

    /* SUB-GRAPHS */
    subgraph sources {
        rank = source
        pickup
        qmgr_chooses_mail
        connect
    }

    subgraph clone_or_save {
        rank = same
        clone
        rejection
    }

    subgraph disconnect_without_queueid {
        rank = same
        disconnect
        fixup_enter_in_db_disconnect
    }

    subgraph save_or_track {
        rank = same
        track
        save_by_queueid
    }

}
